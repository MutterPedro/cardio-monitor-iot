services:
  rabbitmq:
    # image: rabbitmq:3-management
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
    restart: unless-stopped
    ports:
      - '15672:15672' # Management UI port
      - '15675:15675' # Web MQTT port
      - '1883:1883' # MQTT port
      - '5672:5672' # AMQP port
      - '1885:1885' # MQTT over WebSocket port
      - '8883:8883' # MQTT over SSL port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: 123456
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      # - ./data:/var/lib/rabbitmq
      # - ./log:/var/log/rabbitmq
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      # - ./certs:/etc/rabbitmq/certs:ro
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    build: .
    # ports:
    #   - 8080
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 8883
      RABBITMQ_USER: admin
      RABBITMQ_PASS: 123456
  sensor_emulator:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 8883
      RABBITMQ_USER: admin
      RABBITMQ_PASS: 123456
    tty: true
    command: sensor_emulator.py

volumes:
  rabbitmq_data:
networks:
  default:
    name: rabbitmq-net
    driver: bridge
